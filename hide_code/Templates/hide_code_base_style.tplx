((= IPython input/output style =))

((*- extends 'base.tplx' -*))

% Custom definitions
((* block definitions *))
    ((( super() )))

    % Pygments definitions
    ((( resources.latex.pygments_definitions )))

    % Exact colors from NB
    \definecolor{incolor}{rgb}{0.0, 0.0, 0.5}
    \definecolor{outcolor}{rgb}{0.545, 0.0, 0.0}

((* endblock definitions *))

%===============================================================================
% Input
%===============================================================================

((* block input scoped *))
    ((( add_prompt(cell.source | highlight_code(strip_verbatim=True), cell, 'In ', 'incolor') )))
((* endblock input *))


%=============================================================================== 
% Output
%===============================================================================

((* block execute_result scoped *))
((*- if cell.metadata.hideOutput -*))
((*- else -*))
    ((*- for type in output.data | filter_data_type -*))
        ((*- if type in ['text/plain'] -*))
            ((( add_prompt(output.data['text/plain'] | escape_latex, cell, 'Out', 'outcolor') )))
        ((*- else -*))
\texttt{\color{outcolor}Out[{\color{outcolor}((( cell.execution_count )))}]:}((( super() )))
        ((*- endif -*))
    ((*- endfor -*))
((*- endif -*))
((* endblock execute_result *))


((* block stream *))
((*- if cell.metadata.hideOutput -*))
((*- else -*))
    ((( super() )))
((*- endif -*))
((* endblock stream *))

%==============================================================================
% Support Macros
%==============================================================================

% Name: draw_prompt
% Purpose: Renders an output/input prompt
((* macro add_prompt(text, cell, prompt, prompt_color) -*))
    ((*- if cell.execution_count is defined -*))
    ((*- set execution_count = "" ~ (cell.execution_count | replace(None, " ")) -*))
    ((*- else -*))
    ((*- set execution_count = " " -*))
    ((*- endif -*))
    ((*- set indention =  " " * (execution_count | length + 7) -*))

((*- if cell.metadata.hidePrompt and cell.metadata.hideCode -*))
\begin{Verbatim}[commandchars=\\\{\}]

\end{Verbatim}
((*- elif cell.metadata.hidePrompt -*))
\begin{Verbatim}[commandchars=\\\{\}]
((( text )))
\end{Verbatim}
((*- elif cell.metadata.hideCode -*))
((*- set text = "" -*))
\begin{Verbatim}[commandchars=\\\{\}]
((( text | add_prompts(first='{\color{' ~ prompt_color ~ '}' ~ prompt ~ '[{\\color{' ~ prompt_color ~ '}' ~ execution_count ~ '}]:} ', cont=indention) )))
\end{Verbatim}
((*- else -*))
\begin{Verbatim}[commandchars=\\\{\}]
((( text | add_prompts(first='{\color{' ~ prompt_color ~ '}' ~ prompt ~ '[{\\color{' ~ prompt_color ~ '}' ~ execution_count ~ '}]:} ', cont=indention) )))
\end{Verbatim}
((*- endif -*))
((*- endmacro *))
